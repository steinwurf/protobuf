// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: src.proto
// Protobuf C++ Version: 6.31.0

#include "src.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf {

inline constexpr Info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::protobuf::Type >(0)},
        kind_{static_cast< ::protobuf::Kind >(0)},
        min_{},
        max_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Info::Info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Info_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoDefaultTypeInternal() {}
  union {
    Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoDefaultTypeInternal _Info_default_instance_;

inline constexpr Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr},
        value_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Metric::Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricDefaultTypeInternal() {}
  union {
    Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricDefaultTypeInternal _Metric_default_instance_;

inline constexpr Metrics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        metric_{},
        protocol_version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Metrics::Metrics(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Metrics_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetricsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsDefaultTypeInternal() {}
  union {
    Metrics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsDefaultTypeInternal _Metrics_default_instance_;
}  // namespace protobuf
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_src_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_src_2eproto = nullptr;
const ::uint32_t
    TableStruct_src_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_._oneof_case_[0]),
        17, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_.unit_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_.max_),
        0,
        1,
        3,
        4,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::protobuf::Metric, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf::Metric, _impl_._oneof_case_[0]),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::protobuf::Metric, _impl_.info_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::protobuf::Metric, _impl_.value_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::protobuf::Metrics, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::protobuf::Metrics, _impl_.protocol_version_),
        PROTOBUF_FIELD_OFFSET(::protobuf::Metrics, _impl_.metric_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::protobuf::Info)},
        {28, sizeof(::protobuf::Metric)},
        {43, sizeof(::protobuf::Metrics)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::protobuf::_Info_default_instance_._instance,
    &::protobuf::_Metric_default_instance_._instance,
    &::protobuf::_Metrics_default_instance_._instance,
};
const char descriptor_table_protodef_src_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tsrc.proto\022\010protobuf\"\205\002\n\004Info\022\014\n\004name\030\001"
    " \001(\t\022\023\n\013description\030\002 \001(\t\022\034\n\004type\030\003 \001(\0162"
    "\016.protobuf.Type\022\034\n\004kind\030\004 \001(\0162\016.protobuf"
    ".Kind\022\014\n\004unit\030\005 \001(\t\022\024\n\nuint64_min\030\006 \001(\004H"
    "\000\022\023\n\tint64_min\030\007 \001(\003H\000\022\025\n\013float64_min\030\010 "
    "\001(\001H\000\022\024\n\nuint64_max\030\t \001(\004H\001\022\023\n\tint64_max"
    "\030\n \001(\003H\001\022\025\n\013float64_max\030\013 \001(\001H\001B\005\n\003minB\005"
    "\n\003max\"\233\001\n\006Metric\022!\n\004info\030\001 \001(\0132\016.protobu"
    "f.InfoH\001\210\001\001\022\026\n\014uint64_value\030\002 \001(\004H\000\022\025\n\013i"
    "nt64_value\030\003 \001(\003H\000\022\027\n\rfloat64_value\030\004 \001("
    "\001H\000\022\024\n\nbool_value\030\005 \001(\010H\000B\007\n\005valueB\007\n\005_i"
    "nfo\"E\n\007Metrics\022\030\n\020protocol_version\030\001 \001(\r"
    "\022 \n\006metric\030\002 \003(\0132\020.protobuf.Metric*,\n\004Ki"
    "nd\022\013\n\007COUNTER\020\000\022\014\n\010CONSTANT\020\001\022\t\n\005GAUGE\020\002"
    "*4\n\004Type\022\n\n\006UINT64\020\000\022\t\n\005INT64\020\001\022\013\n\007FLOAT"
    "64\020\002\022\010\n\004BOOL\020\003b\006proto3"
};
static ::absl::once_flag descriptor_table_src_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_src_2eproto = {
    false,
    false,
    622,
    descriptor_table_protodef_src_2eproto,
    "src.proto",
    &descriptor_table_src_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_src_2eproto::offsets,
    file_level_enum_descriptors_src_2eproto,
    file_level_service_descriptors_src_2eproto,
};
namespace protobuf {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Kind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_src_2eproto);
  return file_level_enum_descriptors_src_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Kind_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_src_2eproto);
  return file_level_enum_descriptors_src_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Type_internal_data_[] = {
    262144u, 0u, };
// ===================================================================

class Info::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Info, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::protobuf::Info, _impl_._oneof_case_);
};

Info::Info(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.Info)
}
PROTOBUF_NDEBUG_INLINE Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::protobuf::Info& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        description_(arena, from.description_),
        unit_(arena, from.unit_),
        min_{},
        max_{},
        _oneof_case_{from._oneof_case_[0], from._oneof_case_[1]} {}

Info::Info(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, kind_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::kind_));
  switch (min_case()) {
    case MIN_NOT_SET:
      break;
      case kUint64Min:
        _impl_.min_.uint64_min_ = from._impl_.min_.uint64_min_;
        break;
      case kInt64Min:
        _impl_.min_.int64_min_ = from._impl_.min_.int64_min_;
        break;
      case kFloat64Min:
        _impl_.min_.float64_min_ = from._impl_.min_.float64_min_;
        break;
  }
  switch (max_case()) {
    case MAX_NOT_SET:
      break;
      case kUint64Max:
        _impl_.max_.uint64_max_ = from._impl_.max_.uint64_max_;
        break;
      case kInt64Max:
        _impl_.max_.int64_max_ = from._impl_.max_.int64_max_;
        break;
      case kFloat64Max:
        _impl_.max_.float64_max_ = from._impl_.max_.float64_max_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:protobuf.Info)
}
PROTOBUF_NDEBUG_INLINE Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        description_(arena),
        unit_(arena),
        min_{},
        max_{},
        _oneof_case_{} {}

inline void Info::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, kind_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::kind_));
}
Info::~Info() {
  // @@protoc_insertion_point(destructor:protobuf.Info)
  SharedDtor(*this);
}
inline void Info::SharedDtor(MessageLite& self) {
  Info& this_ = static_cast<Info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.unit_.Destroy();
  if (this_.has_min()) {
    this_.clear_min();
  }
  if (this_.has_max()) {
    this_.clear_max();
  }
  this_._impl_.~Impl_();
}

void Info::clear_min() {
// @@protoc_insertion_point(one_of_clear_start:protobuf.Info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (min_case()) {
    case kUint64Min: {
      // No need to clear
      break;
    }
    case kInt64Min: {
      // No need to clear
      break;
    }
    case kFloat64Min: {
      // No need to clear
      break;
    }
    case MIN_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MIN_NOT_SET;
}

void Info::clear_max() {
// @@protoc_insertion_point(one_of_clear_start:protobuf.Info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (max_case()) {
    case kUint64Max: {
      // No need to clear
      break;
    }
    case kInt64Max: {
      // No need to clear
      break;
    }
    case kFloat64Max: {
      // No need to clear
      break;
    }
    case MAX_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = MAX_NOT_SET;
}


inline void* PROTOBUF_NONNULL Info::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Info(arena);
}
constexpr auto Info::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Info),
                                            alignof(Info));
}
constexpr auto Info::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Info_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Info::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Info::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Info>(), &Info::ByteSizeLong,
              &Info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Info, _impl_._cached_size_),
          false,
      },
      &Info::kDescriptorMethods,
      &descriptor_table_src_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Info_class_data_ =
        Info::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Info_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Info_class_data_.tc_table);
  return Info_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 11, 0, 49, 2>
Info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Info, _impl_._has_bits_),
    0, // no _extensions_
    11, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Info_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf::Info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Info, _impl_.name_)}},
    // string description = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Info, _impl_.description_)}},
    // .protobuf.Type type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Info, _impl_.type_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(Info, _impl_.type_)}},
    // .protobuf.Kind kind = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Info, _impl_.kind_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(Info, _impl_.kind_)}},
    // string unit = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(Info, _impl_.unit_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.description_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .protobuf.Type type = 3;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .protobuf.Kind kind = 4;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.kind_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string unit = 5;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.unit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 uint64_min = 6;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.min_.uint64_min_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // int64 int64_min = 7;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.min_.int64_min_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // double float64_min = 8;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.min_.float64_min_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // uint64 uint64_max = 9;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.max_.uint64_max_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // int64 int64_max = 10;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.max_.int64_max_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // double float64_max = 11;
    {PROTOBUF_FIELD_OFFSET(Info, _impl_.max_.float64_max_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\15\4\13\0\0\4\0\0\0\0\0\0\0\0\0\0"
    "protobuf.Info"
    "name"
    "description"
    "unit"
  }},
};
PROTOBUF_NOINLINE void Info::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.Info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.unit_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.kind_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.kind_));
  }
  clear_min();
  clear_max();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Info::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Info& this_ = static_cast<const Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Info::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.Info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.Info.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string description = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.Info.description");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .protobuf.Type type = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_type(), target);
    }
  }

  // .protobuf.Kind kind = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_kind() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_kind(), target);
    }
  }

  // string unit = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_unit().empty()) {
      const ::std::string& _s = this_._internal_unit();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.Info.unit");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  switch (this_.min_case()) {
    case kUint64Min: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          6, this_._internal_uint64_min(), target);
      break;
    }
    case kInt64Min: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<7>(
              stream, this_._internal_int64_min(), target);
      break;
    }
    case kFloat64Min: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          8, this_._internal_float64_min(), target);
      break;
    }
    default:
      break;
  }
  switch (this_.max_case()) {
    case kUint64Max: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          9, this_._internal_uint64_max(), target);
      break;
    }
    case kInt64Max: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<10>(
              stream, this_._internal_int64_max(), target);
      break;
    }
    case kFloat64Max: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          11, this_._internal_float64_max(), target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.Info)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Info::ByteSizeLong(const MessageLite& base) {
  const Info& this_ = static_cast<const Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Info::ByteSizeLong() const {
  const Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:protobuf.Info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string unit = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_unit().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unit());
      }
    }
    // .protobuf.Type type = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
    // .protobuf.Kind kind = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_kind() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_kind());
      }
    }
  }
  switch (this_.min_case()) {
    // uint64 uint64_min = 6;
    case kUint64Min: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_uint64_min());
      break;
    }
    // int64 int64_min = 7;
    case kInt64Min: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_int64_min());
      break;
    }
    // double float64_min = 8;
    case kFloat64Min: {
      total_size += 9;
      break;
    }
    case MIN_NOT_SET: {
      break;
    }
  }
  switch (this_.max_case()) {
    // uint64 uint64_max = 9;
    case kUint64Max: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_uint64_max());
      break;
    }
    // int64 int64_max = 10;
    case kInt64Max: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_int64_max());
      break;
    }
    // double float64_max = 11;
    case kFloat64Max: {
      total_size += 9;
      break;
    }
    case MAX_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Info*>(&to_msg);
  auto& from = static_cast<const Info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_unit().empty()) {
        _this->_internal_set_unit(from._internal_unit());
      } else {
        if (_this->_impl_.unit_.IsDefault()) {
          _this->_internal_set_unit("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_kind() != 0) {
        _this->_impl_.kind_ = from._impl_.kind_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_min();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kUint64Min: {
        _this->_impl_.min_.uint64_min_ = from._impl_.min_.uint64_min_;
        break;
      }
      case kInt64Min: {
        _this->_impl_.min_.int64_min_ = from._impl_.min_.int64_min_;
        break;
      }
      case kFloat64Min: {
        _this->_impl_.min_.float64_min_ = from._impl_.min_.float64_min_;
        break;
      }
      case MIN_NOT_SET:
        break;
    }
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[1]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[1];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_max();
      }
      _this->_impl_._oneof_case_[1] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kUint64Max: {
        _this->_impl_.max_.uint64_max_ = from._impl_.max_.uint64_max_;
        break;
      }
      case kInt64Max: {
        _this->_impl_.max_.int64_max_ = from._impl_.max_.int64_max_;
        break;
      }
      case kFloat64Max: {
        _this->_impl_.max_.float64_max_ = from._impl_.max_.float64_max_;
        break;
      }
      case MAX_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Info::CopyFrom(const Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Info::InternalSwap(Info* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unit_, &other->_impl_.unit_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Info, _impl_.kind_)
      + sizeof(Info::_impl_.kind_)
      - PROTOBUF_FIELD_OFFSET(Info, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
  swap(_impl_.min_, other->_impl_.min_);
  swap(_impl_.max_, other->_impl_.max_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::google::protobuf::Metadata Info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Metric, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::protobuf::Metric, _impl_._oneof_case_);
};

Metric::Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.Metric)
}
PROTOBUF_NDEBUG_INLINE Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::protobuf::Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        value_{},
        _oneof_case_{from._oneof_case_[0]} {}

Metric::Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.info_)
                : nullptr;
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kUint64Value:
        _impl_.value_.uint64_value_ = from._impl_.value_.uint64_value_;
        break;
      case kInt64Value:
        _impl_.value_.int64_value_ = from._impl_.value_.int64_value_;
        break;
      case kFloat64Value:
        _impl_.value_.float64_value_ = from._impl_.value_.float64_value_;
        break;
      case kBoolValue:
        _impl_.value_.bool_value_ = from._impl_.value_.bool_value_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:protobuf.Metric)
}
PROTOBUF_NDEBUG_INLINE Metric::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        value_{},
        _oneof_case_{} {}

inline void Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
Metric::~Metric() {
  // @@protoc_insertion_point(destructor:protobuf.Metric)
  SharedDtor(*this);
}
inline void Metric::SharedDtor(MessageLite& self) {
  Metric& this_ = static_cast<Metric&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.info_;
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void Metric::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:protobuf.Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kFloat64Value: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* PROTOBUF_NONNULL Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Metric(arena);
}
constexpr auto Metric::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Metric),
                                            alignof(Metric));
}
constexpr auto Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Metric>(), &Metric::ByteSizeLong,
              &Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Metric, _impl_._cached_size_),
          false,
      },
      &Metric::kDescriptorMethods,
      &descriptor_table_src_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Metric_class_data_ =
        Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Metric_class_data_.tc_table);
  return Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 1, 0, 2>
Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Metric, _impl_._has_bits_),
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf::Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .protobuf.Info info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Metric, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .protobuf.Info info = 1;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 uint64_value = 2;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_.uint64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt64)},
    // int64 int64_value = 3;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_.int64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // double float64_value = 4;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_.float64_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // bool bool_value = 5;
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_.bool_value_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::protobuf::Info>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  clear_value();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Metric& this_ = static_cast<const Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .protobuf.Info info = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
        stream);
  }

  switch (this_.value_case()) {
    case kUint64Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_uint64_value(), target);
      break;
    }
    case kInt64Value: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_int64_value(), target);
      break;
    }
    case kFloat64Value: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_float64_value(), target);
      break;
    }
    case kBoolValue: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_bool_value(), target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Metric::ByteSizeLong(const MessageLite& base) {
  const Metric& this_ = static_cast<const Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Metric::ByteSizeLong() const {
  const Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:protobuf.Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // optional .protobuf.Info info = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
    }
  }
  switch (this_.value_case()) {
    // uint64 uint64_value = 2;
    case kUint64Value: {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this_._internal_uint64_value());
      break;
    }
    // int64 int64_value = 3;
    case kInt64Value: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_int64_value());
      break;
    }
    // double float64_value = 4;
    case kFloat64Value: {
      total_size += 9;
      break;
    }
    // bool bool_value = 5;
    case kBoolValue: {
      total_size += 2;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Metric*>(&to_msg);
  auto& from = static_cast<const Metric&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.info_ != nullptr);
    if (_this->_impl_.info_ == nullptr) {
      _this->_impl_.info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.info_);
    } else {
      _this->_impl_.info_->MergeFrom(*from._impl_.info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kUint64Value: {
        _this->_impl_.value_.uint64_value_ = from._impl_.value_.uint64_value_;
        break;
      }
      case kInt64Value: {
        _this->_impl_.value_.int64_value_ = from._impl_.value_.int64_value_;
        break;
      }
      case kFloat64Value: {
        _this->_impl_.value_.float64_value_ = from._impl_.value_.float64_value_;
        break;
      }
      case kBoolValue: {
        _this->_impl_.value_.bool_value_ = from._impl_.value_.bool_value_;
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Metric::InternalSwap(Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Metrics::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Metrics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Metrics, _impl_._has_bits_);
};

Metrics::Metrics(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Metrics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.Metrics)
}
PROTOBUF_NDEBUG_INLINE Metrics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::protobuf::Metrics& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        metric_{visibility, arena, from.metric_} {}

Metrics::Metrics(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Metrics& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Metrics_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Metrics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.protocol_version_ = from._impl_.protocol_version_;

  // @@protoc_insertion_point(copy_constructor:protobuf.Metrics)
}
PROTOBUF_NDEBUG_INLINE Metrics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        metric_{visibility, arena} {}

inline void Metrics::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.protocol_version_ = {};
}
Metrics::~Metrics() {
  // @@protoc_insertion_point(destructor:protobuf.Metrics)
  SharedDtor(*this);
}
inline void Metrics::SharedDtor(MessageLite& self) {
  Metrics& this_ = static_cast<Metrics&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Metrics::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Metrics(arena);
}
constexpr auto Metrics::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Metrics, _impl_.metric_) +
          decltype(Metrics::_impl_.metric_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Metrics), alignof(Metrics), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Metrics::PlacementNew_,
                                 sizeof(Metrics),
                                 alignof(Metrics));
  }
}
constexpr auto Metrics::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Metrics_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Metrics::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Metrics>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Metrics::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Metrics>(), &Metrics::ByteSizeLong,
              &Metrics::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Metrics, _impl_._cached_size_),
          false,
      },
      &Metrics::kDescriptorMethods,
      &descriptor_table_src_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Metrics_class_data_ =
        Metrics::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Metrics::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Metrics_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Metrics_class_data_.tc_table);
  return Metrics_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
Metrics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Metrics, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Metrics_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf::Metrics>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .protobuf.Metric metric = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Metrics, _impl_.metric_)}},
    // uint32 protocol_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Metrics, _impl_.protocol_version_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Metrics, _impl_.protocol_version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 protocol_version = 1;
    {PROTOBUF_FIELD_OFFSET(Metrics, _impl_.protocol_version_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .protobuf.Metric metric = 2;
    {PROTOBUF_FIELD_OFFSET(Metrics, _impl_.metric_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::protobuf::Metric>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Metrics::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.Metrics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metric_.Clear();
  _impl_.protocol_version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Metrics::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Metrics& this_ = static_cast<const Metrics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Metrics::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Metrics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.Metrics)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 protocol_version = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_protocol_version() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_protocol_version(), target);
    }
  }

  // repeated .protobuf.Metric metric = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_metric_size());
       i < n; i++) {
    const auto& repfield = this_._internal_metric().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.Metrics)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Metrics::ByteSizeLong(const MessageLite& base) {
  const Metrics& this_ = static_cast<const Metrics&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Metrics::ByteSizeLong() const {
  const Metrics& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:protobuf.Metrics)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .protobuf.Metric metric = 2;
    {
      total_size += 1UL * this_._internal_metric_size();
      for (const auto& msg : this_._internal_metric()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // uint32 protocol_version = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_protocol_version() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_protocol_version());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Metrics::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Metrics*>(&to_msg);
  auto& from = static_cast<const Metrics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.Metrics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_metric()->MergeFrom(
      from._internal_metric());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_protocol_version() != 0) {
      _this->_impl_.protocol_version_ = from._impl_.protocol_version_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Metrics::CopyFrom(const Metrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.Metrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Metrics::InternalSwap(Metrics* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.metric_.InternalSwap(&other->_impl_.metric_);
  swap(_impl_.protocol_version_, other->_impl_.protocol_version_);
}

::google::protobuf::Metadata Metrics::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_src_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
